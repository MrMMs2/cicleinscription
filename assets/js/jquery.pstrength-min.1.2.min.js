! function (r) {
    r.extend(r.fn, {
        pstrength: function (s) {
            var s = r.extend({
                verdects: ["Muito fraco", "Fraco", "Médio", "Forte", "Muito forte"],
                colors: ["#f00", "#c06", "#f60", "#3c0", "#3f0"],
                scores: [10, 15, 30, 40],
                common: ["password", "sex", "god", "123456", "123", "liverpool", "letmein", "qwerty", "monkey"],
                minchar: 6
            }, s);
            return this.each(function () {
                var e = r(this).attr("id");
                r(this).after('<div class="pstrength-minchar" id="' + e + '_minchar">Número mínimo de caracteres é ' + s.minchar + "</div>"), r(this).after('<div class="pstrength-info" id="' + e + '_text"></div>'), r(this).after('<div class="pstrength-bar" id="' + e + '_bar" style="border: 1px solid white; font-size: 1px; height: 5px; width: 0px;"></div>'), r(this).keyup(function () {
                    r.fn.runPassword(r(this).val(), e, s)
                })
            })
        },
        runPassword: function (s, e, t) {
            nPerc = r.fn.checkPassword(s, t);
            var c = "#" + e + "_bar",
                o = "#" + e + "_text"; - 200 == nPerc ? (strColor = "#f00", strText = "Unsafe password word!", r(c).css({
                width: "0%"
            })) : 0 > nPerc && nPerc > -199 ? (strColor = "#ccc", strText = "Muito curta", r(c).css({
                width: "5%"
            })) : nPerc <= t.scores[0] ? (strColor = t.colors[0], strText = t.verdects[0], r(c).css({
                width: "10%"
            })) : nPerc > t.scores[0] && nPerc <= t.scores[1] ? (strColor = t.colors[1], strText = t.verdects[1], r(c).css({
                width: "20%"
            })) : nPerc > t.scores[1] && nPerc <= t.scores[2] ? (strColor = t.colors[2], strText = t.verdects[2], r(c).css({
                width: "30%"
            })) : nPerc > t.scores[2] && nPerc <= t.scores[3] ? (strColor = t.colors[3], strText = t.verdects[3], r(c).css({
                width: "37%"
            })) : (strColor = t.colors[4], strText = t.verdects[4], r(c).css({
                width: "43.3%"
            })), r(c).css({
                backgroundColor: strColor
            }), r(o).html("<span style='color: " + strColor + ";'>" + strText + "</span>")
        },
        checkPassword: function (r, s) {
            {
                var e = 0;
                s.verdects[0]
            }
            r.length < s.minchar ? e -= 100 : r.length >= s.minchar && r.length <= s.minchar + 2 ? e += 6 : r.length >= s.minchar + 3 && r.length <= s.minchar + 4 ? e += 12 : r.length >= s.minchar + 5 && (e += 18), r.match(/[a-z]/) && (e += 1), r.match(/[A-Z]/) && (e += 5), r.match(/\d+/) && (e += 5), r.match(/(.*[0-9].*[0-9].*[0-9])/) && (e += 7), r.match(/.[!,@,#,$,%,^,&,*,?,_,~]/) && (e += 5), r.match(/(.*[!,@,#,$,%,^,&,*,?,_,~].*[!,@,#,$,%,^,&,*,?,_,~])/) && (e += 7), r.match(/([a-z].*[A-Z])|([A-Z].*[a-z])/) && (e += 2), r.match(/([a-zA-Z])/) && r.match(/([0-9])/) && (e += 3), r.match(/([a-zA-Z0-9].*[!,@,#,$,%,^,&,*,?,_,~])|([!,@,#,$,%,^,&,*,?,_,~].*[a-zA-Z0-9])/) && (e += 3);
            for (var c = 0; c < s.common.length; c++) r.toLowerCase() == s.common[c] && (e = -200);
            return e
        }
    })
}(jQuery);
